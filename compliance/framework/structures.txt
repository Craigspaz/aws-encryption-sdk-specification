



AWS Crypto Tools                                            . Amazon AWS
                                                              Amazon AWS
                                                       21 September 2021


                               structures
                               structures

Abstract

   The structures specification for the AWS Encryption SDK.

Table of Contents

   1.  Conventions and Definitions
   2.  Structures
     2.1.  Version
       2.1.1.  Changelog
     2.2.  Definitions
       2.2.1.  Conventions used in this document
     2.3.  Overview
       2.3.1.  Encrypted Data Key
       2.3.2.  Encryption Context
       2.3.3.  Encryption Materials
       2.3.4.  Decryption Materials
   3.  Normative References
   Acknowledgments
   Author's Address

1.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here

2.  Structures

2.1.  Version

   0.3.0

2.1.1.  Changelog

   *  0.3.0

      -  Clarify handling of the "aws-crypto-public-key" encryption
         context key.

   *  0.2.1

      -  Clarify naming of KMS to AWS KMS (https://github.com/awslabs/
         aws-encryption-sdk-specification/issues/67)

   *  0.2.0

      -  Remove Keyring Trace (../changes/2020-05-13_remove-keyring-
         trace/change.md)

   *  0.1.0-preview

      -  Initial record

2.2.  Definitions

2.2.1.  Conventions used in this document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119
   (https://tools.ietf.org/html/rfc2119).

2.3.  Overview

   This document includes the specifications for common structures
   referenced throughout the AWS Encryption SDK specification.  These
   structures define a group of related fields that MUST hold certain
   properties.  Wherever these structures are referenced in this
   specification, implementations MUST ensure that all properties of a
   structure's fields are upheld.

   Note that this specification does not specify how these structures
   should be represented or passed throughout the AWS Encryption SDK
   framework.  While these structures will usually be represented as
   objects, lower level languages MAY represent these fields in a less
   strictly defined way as long as all field properties are still
   upheld.

   Structures defined in this document:

   *  Encrypted Data Key (Section 2.3.1)

   *  Encryption Context (Section 2.3.2)

   *  Encryption Materials (Section 2.3.3)

   *  Decryption Materials (Section 2.3.4)

2.3.1.  Encrypted Data Key

2.3.1.1.  Implementations

   *  C (https://github.com/aws/aws-encryption-sdk-
      c/blob/master/include/aws/cryptosdk/edk.h)

   *  Javascript (https://github.com/awslabs/aws-encryption-sdk-
      javascript/blob/master/modules/material-management/src/
      encrypted_data_key.ts)

   *  Python (https://github.com/aws/aws-encryption-sdk-
      python/blob/master/src/aws_encryption_sdk/structures.py)

   *  Java (https://github.com/aws/aws-encryption-sdk-
      java/blob/master/src/main/java/com/amazonaws/encryptionsdk/
      EncryptedDataKey.java)

2.3.1.2.  Structure

   An encrypted data key is comprised of the following fields:

   *  Key Provider ID (Section 2.3.1.2.1)

   *  Key Provider Information (Section 2.3.1.2.2)

   *  Section 2.3.1.2.3

   Note: "Encrypted" is a misnomer here, as the process by which a key
   provider may obtain the plaintext data key from the ciphertext and
   vice versa does not have to be an encryption and decryption cipher.
   This specification uses the terms "encrypt" and "decrypt" for
   simplicity, but the actual process by which a key provider obtains
   the plaintext data key from the ciphertext and vice versa MAY be any
   reversible operation, though we expect that most will use encryption.

2.3.1.2.1.  Key Provider ID

   The key provider ID (keyring-interface.md#key-provider-id) value for
   the keyring that wrote this encrypted data key.

2.3.1.2.2.  Key Provider Information

   The key provider info (keyring-interface.md#key-provider-info) value
   for the keyring that wrote this encrypted data key.

2.3.1.2.3.  Ciphertext

   An opaque value from which an appropriate key provider can obtain the
   plaintext data key.

   Some key provider MUST be capable of deterministically obtaining the
   plaintext key from the ciphertext.

   Most commonly this is an encrypted form of the plaintext data key.
   Alternatively, it could be the public input to a KDF that derives the
   plaintext data key or an identifier into a key store that will return
   the plaintext data key.

2.3.2.  Encryption Context

2.3.2.1.  Implementations

   *  C (https://github.com/aws/aws-encryption-sdk-
      c/blob/master/include/aws/cryptosdk/enc_ctx.h)

   *  Javascript (https://github.com/awslabs/aws-encryption-sdk-
      javascript/blob/master/modules/material-management/src/types.ts)

   *  Python (https://github.com/aws/aws-encryption-sdk-
      python/blob/master/src/aws_encryption_sdk/internal/formatting/
      encryption_context.py)

   *  Java (https://github.com/aws/aws-encryption-sdk-
      java/blob/master/src/main/java/com/amazonaws/encryptionsdk/
      internal/EncryptionContextSerializer.java)

2.3.2.2.  Structure

   The encryption context is a key-value mapping of arbitrary, non-
   secret, UTF-8 encoded strings.  It is used during encryption
   (../client-apis/encrypt.md) and decryption (../client-apis/
   decrypt.md) to provide additional authenticated data (AAD).

   Users SHOULD use the encryption context to store:

   *  Non-secret data that MUST remain associated with the message
      (../data-format/message.md) ciphertext.

   *  Data that is useful in logging and tracking, such as data about
      the file type, purpose, or ownership.

   Users MUST NOT use the encryption context to store secret data.

2.3.3.  Encryption Materials

2.3.3.1.  Implementations

   +==========+=============+=========+=================================================================+
   |Language  |Confirmed    |Minimum  |Implementation                                                   |
   |          |Compatible   |Version  |                                                                 |
   |          |with Spec    |Confirmed|                                                                 |
   |          |Version      |         |                                                                 |
   +==========+=============+=========+=================================================================+
   |C         |0.1.0-preview|0.1.0    |materials.h (https://github.com/aws/aws-encryption-sdk-          |
   |          |             |         |c/blob/master/include/aws/cryptosdk/materials.h)                 |
   +----------+-------------+---------+-----------------------------------------------------------------+
   |Javascript|0.1.0-preview|0.1.0    |cryptographic_material.ts (https://github.com/awslabs/aws-       |
   |          |             |         |encryption-sdk-javascript/blob/master/modules/material-          |
   |          |             |         |management/src/cryptographic_material.ts)                        |
   +----------+-------------+---------+-----------------------------------------------------------------+
   |Python    |0.1.0-preview|n/a      |materials_managers (https://github.com/aws/aws-encryption-sdk-   |
   |          |             |         |python/blob/master/src/aws_encryption_sdk/                       |
   |          |             |         |materials_managers/__init__.py)                                  |
   +----------+-------------+---------+-----------------------------------------------------------------+
   |Java      |0.1.0-preview|n/a      |EncryptionMaterials.java (https://github.com/aws/aws-encryption- |
   |          |             |         |sdk-                                                             |
   |          |             |         |java/blob/master/src/main/java/com/amazonaws/encryptionsdk/model/|
   |          |             |         |EncryptionMaterials.java)                                        |
   +----------+-------------+---------+-----------------------------------------------------------------+

                                  Table 1

2.3.3.2.  Structure

   Encryption materials are a structure containing materials needed for
   encryption (../client-apis/encrypt.md).  This structure MAY include
   any of the following fields:

   *  Algorithm Suite (Section 2.3.3.2.1)

   *  Encrypted Data Keys (Section 2.3.3.2.2)

   *  Encryption Context (Section 2.3.3.2.3)

   *  Plaintext Data Key (Section 2.3.3.2.4)

   *  Signing Key (Section 2.3.3.2.5)

2.3.3.2.1.  Algorithm Suite

   The algorithm suite (algorithm-suites.md) to be used for encryption
   (../client-apis/encrypt.md).

2.3.3.2.2.  Encrypted Data Keys

   A list of the encrypted data keys (Section 2.3.1) that correspond to
   the plaintext data key.

   The Section 2.3.1.2.3 of each encrypted data key in this list MUST be
   an opaque form of the plaintext data key from this set of encryption
   materials.

   If the plaintext data key is not included in this set of encryption
   materials, this list MUST be empty.

2.3.3.2.3.  Encryption Context

   The encryption context (Section 2.3.2) associated with this
   encryption (../client-apis/encrypt.md).

   If an encryption material (Section 2.3.3) contains a signing key
   (Section 2.3.3.2.5), the encryption context (Section 2.3.2) SHOULD
   include the reserved key "aws-crypto-public-key".  The mapped value
   from the reserved key "aws-crypto-public-key" SHOULD be the signature
   verification key corresponding to the signing key (Section 2.3.3.2.5)
   stored on the encryption material (Section 2.3.3).  If an encryption
   material (Section 2.3.3) does not contains a signing key
   (Section 2.3.3.2.5), the encryption context (Section 2.3.2) SHOULD
   NOT include the reserved key "aws-crypto-public-key".

2.3.3.2.4.  Plaintext Data Key

   A data key to be used as input for encryption (../client-apis/
   encrypt.md).

   The plaintext data key MUST:

   *  Fit the specification for the key derivation algorithm (algorithm-
      suites.md#key-derivation-algorithm) included in this decryption
      material's algorithm suite (Section 2.3.3.2.1).

   *  Consist of cryptographically secure (pseudo-)random bits.

   *  Be kept secret.

   The plaintext data key SHOULD be stored as immutable data.

   The plaintext data key SHOULD offer an interface to zero the
   plaintext data key.

2.3.3.2.5.  Signing Key

   The key to be used as the signing key for signature verification
   during encryption (../client-apis/encrypt.md).

   The signing key MUST fit the specification described by the signature
   algorithm (algorithm-suites.md#signature-algorithm) included in this
   encryption material's algorithm suite (Section 2.3.3.2.1).  If the
   algorithm suite does not contain a signing algorithm, the signing key
   MUST NOT be present.

   The value of this key MUST be kept secret.

2.3.4.  Decryption Materials

2.3.4.1.  Implementations

   +==========+=============+=========+=================================================================+
   |Language  |Confirmed    |Minimum  |Implementation                                                   |
   |          |Compatible   |Version  |                                                                 |
   |          |with Spec    |Confirmed|                                                                 |
   |          |Version      |         |                                                                 |
   +==========+=============+=========+=================================================================+
   |C         |0.1.0-preview|0.1.0    |materials.h (https://github.com/aws/aws-encryption-sdk-          |
   |          |             |         |c/blob/master/include/aws/cryptosdk/materials.h)                 |
   +----------+-------------+---------+-----------------------------------------------------------------+
   |Javascript|0.1.0-preview|0.1.0    |cryptographic_material.ts (https://github.com/awslabs/aws-       |
   |          |             |         |encryption-sdk-javascript/blob/master/modules/material-          |
   |          |             |         |management/src/cryptographic_material.ts)                        |
   +----------+-------------+---------+-----------------------------------------------------------------+
   |Python    |0.1.0-preview|n/a      |materials_managers (https://github.com/aws/aws-encryption-sdk-   |
   |          |             |         |python/blob/master/src/aws_encryption_sdk/                       |
   |          |             |         |materials_managers/__init__.py)                                  |
   +----------+-------------+---------+-----------------------------------------------------------------+
   |Java      |0.1.0-preview|n/a      |DecryptionMaterials.java (https://github.com/aws/aws-encryption- |
   |          |             |         |sdk-                                                             |
   |          |             |         |java/blob/master/src/main/java/com/amazonaws/encryptionsdk/model/|
   |          |             |         |DecryptionMaterials.java)                                        |
   +----------+-------------+---------+-----------------------------------------------------------------+

                                  Table 2

2.3.4.2.  Structure

   Decryption materials are a structure containing materials needed for
   decryption (../client-apis/decrypt.md).  This structure MAY include
   any of the following fields:

   *  Algorithm Suite (Section 2.3.4.2.1)

   *  Encryption Context (Section 2.3.4.2.2)

   *  Plaintext Data Key (Section 2.3.4.2.3)

   *  Verification Key (Section 2.3.4.2.4)

2.3.4.2.1.  Algorithm Suite

   The algorithm suite (algorithm-suites.md) to be used for decryption
   (../client-apis/decrypt.md).

2.3.4.2.2.  Encryption Context

   The encryption context (Section 2.3.2) associated with this
   decryption (../client-apis/decrypt.md).

   If a decryption materials (Section 2.3.4) contains a verification key
   (Section 2.3.4.2.4), the encryption context (Section 2.3.2) SHOULD
   include the reserved key "aws-crypto-public-key".  The mapped value
   from the reserved key "aws-crypto-public-key" SHOULD be the signature
   verification key stored on the decryption materials (Section 2.3.4).
   If a decryption materials (Section 2.3.4) does not contain a
   verification key (Section 2.3.4.2.4), the encryption context
   (Section 2.3.2) SHOULD NOT include the reserved key "aws-crypto-
   public-key".

2.3.4.2.3.  Plaintext Data Key

   The data key to be used as input for decryption (../client-apis/
   decrypt.md).

   The plaintext data key MUST:

   *  Fit the specification for the encryption algorithm (algorithm-
      suites.md#encryption-algorithm) included in this decryption
      material's algorithm suite (Section 2.3.4.2.1).

   *  Consist of cryptographically secure (pseudo-)random bits.

   *  Be kept secret.

   The plaintext data key SHOULD be stored as immutable data.

   The plaintext data key SHOULD offer an interface to zero the
   plaintext data key.

2.3.4.2.4.  Verification Key

   The key to be used as the verification key for signature verification
   during decryption (../client-apis/decrypt.md).

   The verification key MUST fit the specification for the signature
   algorithm (algorithm-suites.md#signature-algorithm) included in this
   decryption material's algorithm suite (Section 2.3.4.2.1).

3.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

Acknowledgments

Author's Address

   Amazon AWS
   Amazon AWS

   Email: cryptools+rfc@amazon.com
