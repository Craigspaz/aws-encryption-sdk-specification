



AWS Crypto Tools                                            . Amazon AWS
                                                              Amazon AWS
                                                       21 September 2021


                             message-header
                             message-header

Abstract

   The message-header specification for the AWS Encryption SDK.

Table of Contents

   1.  Conventions and Definitions
   2.  Message Header
     2.1.  Version
       2.1.1.  Changelog
     2.2.  Implementations
     2.3.  Overview
     2.4.  Definitions
       2.4.1.  Conventions used in this document
     2.5.  Structure
       2.5.1.  Header Body
       2.5.2.  Algorithm Suite Data
       2.5.3.  Header Authentication
     2.6.  Appendix
       2.6.1.  Example Structure Definition
       2.6.2.  Example Bytes
   3.  Normative References
   Acknowledgments
   Author's Address

1.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here

2.  Message Header

2.1.  Version

   0.1.1

2.1.1.  Changelog

   *  0.1.1

      -  Include "aws-crypto-public-key" encryption context key.

   *  0.1.0-preview

      -  Initial record

2.2.  Implementations

   *  C (https://github.com/aws/aws-encryption-sdk-c/blob/master/source/
      header.c)

   *  JavaScript (https://github.com/awslabs/aws-encryption-sdk-
      javascript/blob/master/modules/serialize/src/types.ts)

   *  Python (https://github.com/aws/aws-encryption-sdk-
      python/blob/master/src/aws_encryption_sdk/structures.py)

   *  Java (https://github.com/aws/aws-encryption-sdk-
      java/blob/master/src/main/java/com/amazonaws/encryptionsdk/model/
      CiphertextHeaders.java)

2.3.  Overview

   The message header is a component of the message (message.md).

   The purpose of the message header is to define the authenticated
   metadata required for decryption of the message body (message-
   body.md#encrypted-content), including:

   *  The format of the message (message.md) and message body (message-
      body.md)

   *  The encrypted data keys needed for decryption of the message body
      encrypted content (message-body.md#encrypted-content)

   *  The encryption context (../framework/structures.md#encryption-
      context)

2.4.  Definitions

2.4.1.  Conventions used in this document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119
   (https://tools.ietf.org/html/rfc2119).

2.5.  Structure

   The message header is a sequence of bytes that MUST be in big-endian
   format.  The following table describes the fields that form the
   header.  The bytes are appended in the order shown.

    +=======================+================+=======================+
    | Field                 | Length (bytes) | Interpreted as        |
    +=======================+================+=======================+
    | Header Body           | Variable       | Header Body           |
    | (Section 2.5.1)       |                | (Section 2.5.1)       |
    +-----------------------+----------------+-----------------------+
    | Header Authentication | Variable       | Header Authentication |
    | (Section 2.5.3)       |                | (Section 2.5.3)       |
    +-----------------------+----------------+-----------------------+

                                 Table 1

2.5.1.  Header Body

2.5.1.1.  Header Body Version 1.0

   The following table describes the fields that form the Version 1.0
   header body.  The bytes are appended in the order shown.

   +===========+=====================+================================+
   | Field     | Length (bytes)      | Interpreted as                 |
   +===========+=====================+================================+
   | Section   | 1                   | See Supported Versions         |
   | 2.1       |                     | (Section 2.5.1.3.1) (MUST be   |
   |           |                     | "01" in version 1.0 Headers)   |
   +-----------+---------------------+--------------------------------+
   | Section   | 1                   | See Supported Types            |
   | 2.5.1.4   |                     | (Section 2.5.1.4.1)            |
   +-----------+---------------------+--------------------------------+
   | Algorithm | 2                   | See Supported Algorithm Suites |
   | Suite ID  |                     | (../framework/algorithm-       |
   | (Section  |                     | suites.md#supported-algorithm- |
   | 2.5.1.5)  |                     | suites)                        |
   +-----------+---------------------+--------------------------------+
   | Message   | 16                  | Bytes                          |
   | ID        |                     |                                |
   | (Section  |                     |                                |
   | 2.5.1.6)  |                     |                                |
   +-----------+---------------------+--------------------------------+
   | Section   | Variable.           | Section 2.5.1.7                |
   | 2.5.1.7   | Self-describing     |                                |
   |           | (Section 2.5.1.7).  |                                |
   +-----------+---------------------+--------------------------------+
   | Encrypted | Variable.           | Encrypted Data Keys            |
   | Data Keys | Determined by the   | (Section 2.5.1.8)              |
   | (Section  | number of encrypted |                                |
   | 2.5.1.8)  | data keys and the   |                                |
   |           | length of each.     |                                |
   +-----------+---------------------+--------------------------------+
   | Content   | 1                   | See Supported Types            |
   | Type      |                     | (Section 2.5.1.11.1)           |
   | (Section  |                     |                                |
   | 2.5.1.11) |                     |                                |
   +-----------+---------------------+--------------------------------+
   | Section   | 4                   | See Section 2.5.2.1            |
   | 2.5.2.1   |                     |                                |
   +-----------+---------------------+--------------------------------+
   | IV Length | 1                   | UInt8                          |
   | (Section  |                     |                                |
   | 2.5.2.2)  |                     |                                |
   +-----------+---------------------+--------------------------------+
   | Frame     | 4                   | UInt32                         |
   | Length    |                     |                                |
   | (Section  |                     |                                |
   | 2.5.2.3)  |                     |                                |
   +-----------+---------------------+--------------------------------+

                                 Table 2

2.5.1.2.  Header Body Version 2.0

   The following table describes the fields that form the Version 2.0
   header body.  The bytes are appended in the order shown.

   +===========+=====================+================================+
   | Field     | Length (bytes)      | Interpreted as                 |
   +===========+=====================+================================+
   | Section   | 1                   | See Supported Versions         |
   | 2.1       |                     | (Section 2.5.1.3.1) (MUST be   |
   |           |                     | "02" in version 2.0 Headers)   |
   +-----------+---------------------+--------------------------------+
   | Algorithm | 2                   | See Supported Algorithm Suites |
   | Suite ID  |                     | (../framework/algorithm-       |
   | (Section  |                     | suites.md#supported-algorithm- |
   | 2.5.1.5)  |                     | suites)                        |
   +-----------+---------------------+--------------------------------+
   | Message   | 16                  | Bytes                          |
   | ID        |                     |                                |
   | (Section  |                     |                                |
   | 2.5.1.6)  |                     |                                |
   +-----------+---------------------+--------------------------------+
   | Section   | Variable.           | Section 2.5.1.7                |
   | 2.5.1.7   | Self-describing     |                                |
   |           | (Section 2.5.1.7).  |                                |
   +-----------+---------------------+--------------------------------+
   | Encrypted | Variable.           | Encrypted Data Keys            |
   | Data Keys | Determined by the   | (Section 2.5.1.8)              |
   | (Section  | number of encrypted |                                |
   | 2.5.1.8)  | data keys and the   |                                |
   |           | length of each.     |                                |
   +-----------+---------------------+--------------------------------+
   | Content   | 1                   | See Supported Types            |
   | Type      |                     | (Section 2.5.1.11.1)           |
   | (Section  |                     |                                |
   | 2.5.1.11) |                     |                                |
   +-----------+---------------------+--------------------------------+
   | Frame     | 4                   | UInt32                         |
   | Length    |                     |                                |
   | (Section  |                     |                                |
   | 2.5.2.3)  |                     |                                |
   +-----------+---------------------+--------------------------------+
   | Algorithm | Variable.           | See Algorithm Suite Data       |
   | Suite     | Determined by the   | (../framework/algorithm-       |
   | Data      | Algorithm Suite ID  | suites.md#algorithm-suite-     |
   | (Section  |                     | data)                          |
   | 2.5.2)    |                     |                                |
   +-----------+---------------------+--------------------------------+

                                 Table 3

2.5.1.3.  Version

   The version of the message format.  The version (hex) of this field
   MUST be a value that exists in the following table:

2.5.1.3.1.  Supported Versions

                         +=============+=========+
                         | Value (hex) | Version |
                         +=============+=========+
                         | 01          | 1.0     |
                         +-------------+---------+
                         | 02          | 2.0     |
                         +-------------+---------+

                                  Table 4

2.5.1.4.  Type

   The type of the message format.  The type (hex) of this field MUST be
   a value that exists in the following table:

2.5.1.4.1.  Supported Types

          +=============+=======================================+
          | Value (hex) | Type                                  |
          +=============+=======================================+
          | 80          | Customer Authenticated Encrypted Data |
          +-------------+---------------------------------------+

                                  Table 5

2.5.1.5.  Algorithm Suite ID

   The identifier for the algorithm suite used when generating the
   message.  The value (hex) of this field MUST be a value that exists
   in the Supported Algorithm Suites (../framework/algorithm-
   suites.md#supported-algorithm-suites) table.

2.5.1.6.  Message ID

   A Message ID MUST uniquely identify the message (message.md).  While
   implementations cannot guarantee complete uniqueness, implementations
   MUST use a good source of randomness when generating messages IDs in
   order to make the chance of duplicate IDs negligible.

   The purpose of the message ID is to:

   *  Protect against accidental reuse of a derived data key or the
      wearing out of derived data keys in the AWS Encryption SDK

   *  Uniquely identify the message (message.md)

   *  Bind the message header to the message body (message-body.md)

   *  Provide a mechanism to securely reuse a data key with multiple
      messages

2.5.1.7.  AAD

   The Additional Authenticated Data (AAD) for the header.  This AAD is
   an encoding of the encryption context (../framework/
   structures.md#encryption-context).

   When algorithms with signing are used, the encryption context MUST
   contain the key-value pair {"aws-crypto-public-key", "Qtxt"}, where
   "Qtxt" is the base64-encoded serialized form of the signature
   verification key (../framework/algorithm-suites.md#ecdsa).

   The following table describes the fields that form the AAD.  The
   bytes are appended in the order shown.

    +=================+==============================+================+
    | Field           | Length (bytes)               | Interpreted as |
    +=================+==============================+================+
    | Key Value Pairs | 2                            | UInt16         |
    | Length (Section |                              |                |
    | 2.5.1.7.1)      |                              |                |
    +-----------------+------------------------------+----------------+
    | Key Value Pairs | Variable.  Determined by the | Key Value      |
    | (Section        | value of Key Value Pairs     | Pairs (Section |
    | 2.5.1.7.2)      | Length (Section 2.5.1.7.1).  | 2.5.1.7.2)     |
    +-----------------+------------------------------+----------------+

                                  Table 6

2.5.1.7.1.  Key Value Pairs Length

   The length of the Key Value Pairs (Section 2.5.1.7.2) field in bytes.

   When the encryption context (../framework/structures.md#encryption-
   context) is empty, the value of this field MUST be 0.

2.5.1.7.2.  Key Value Pairs

   The encoding of the key-value pairs of the encryption context
   (../framework/structures.md#encryption-context).  When the encryption
   context (../framework/structures.md#encryption-context) is empty,
   this field MUST NOT be included in the Section 2.5.1.7.

   The following table describes the fields that form the Key Value
   Pairs.  The bytes are appended in the order shown.

     +==================+=========================+==================+
     | Field            | Length (bytes)          | Interpreted as   |
     +==================+=========================+==================+
     | Key Value Pair   | 2                       | UInt16           |
     | Count (Section   |                         |                  |
     | 2.5.1.7.2.1)     |                         |                  |
     +------------------+-------------------------+------------------+
     | Key Value Pair   | Variable.  Determined   | Key Value Pair   |
     | Entries (Section | by the count and length | Entries (Section |
     | 2.5.1.7.2.2)     | of each key-value pair. | 2.5.1.7.2.2)     |
     +------------------+-------------------------+------------------+

                                  Table 7

2.5.1.7.2.1.  Key Value Pair Count

   The number of key-value pairs within the Key Value Pair Entries
   (Section 2.5.1.7.2.2) field.  The value of this field MUST be greater
   than 0.

2.5.1.7.2.2.  Key Value Pair Entries

   A sequence of one or more key-value pair entries.

   This sequence MUST NOT contain duplicate entries.

   These entries MUST have entries sorted, by key, in ascending order
   according to the UTF-8 encoded binary value.

   The following table describes the fields that form each key value
   pair entry.  The bytes are appended in the order shown.

   +========+=========================================+================+
   | Field  | Length (bytes)                          | Interpreted    |
   |        |                                         | as             |
   +========+=========================================+================+
   | Key    | 2                                       | UInt16         |
   | Length |                                         |                |
   +--------+-----------------------------------------+----------------+
   | Key    | Variable.  Equal to the value specified | UTF-8 encoded  |
   |        | in the previous 2 bytes (Key Length).   | bytes          |
   +--------+-----------------------------------------+----------------+
   | Value  | 2                                       | UInt16         |
   | Length |                                         |                |
   +--------+-----------------------------------------+----------------+
   | Value  | Variable.  Equal to the value specified | UTF-8 encoded  |
   |        | in the previous 2 bytes (Value Length). | bytes          |
   +--------+-----------------------------------------+----------------+

                                  Table 8

2.5.1.8.  Encrypted Data Keys

   The encoding of the encrypted data keys (../framework/
   structures.md#encrypted-data-key).

   The following table describes the fields that form the encrypted data
   keys.  The bytes are appended in the order shown.

   +====================+=========================+====================+
   | Field              | Length, in bytes        | Interpreted as     |
   +====================+=========================+====================+
   | Encrypted Data Key | 2                       | UInt16             |
   | Count              |                         |                    |
   | (Section 2.5.1.9)  |                         |                    |
   +--------------------+-------------------------+--------------------+
   | Encrypted Data Key | Variable.  Determined   | Encrypted Data     |
   | Entries            | by the count and length | Key Entries        |
   | (Section 2.5.1.10) | of each key-value pair. | (Section           |
   |                    |                         | 2.5.1.10)          |
   +--------------------+-------------------------+--------------------+

                                  Table 9

2.5.1.9.  Encrypted Data Key Count

   The number of encrypted data keys.  This value MUST be greater than
   0.

2.5.1.10.  Encrypted Data Key Entries

   A sequence of one or more encrypted data key entries.

   The following table describes the fields that form each encrypted
   data key entry.  The bytes are appended in the order shown.

    +=================+=================================+=============+
    | Field           | Length, in bytes                | Interpreted |
    |                 |                                 | as          |
    +=================+=================================+=============+
    | Key Provider ID | 2                               | UInt16      |
    | Length (Section |                                 |             |
    | 2.5.1.10.1)     |                                 |             |
    +-----------------+---------------------------------+-------------+
    | Key Provider ID | Variable.  Equal to the value   | UTF-8       |
    | (Section        | specified in the previous 2     | encoded     |
    | 2.5.1.10.2)     | bytes (Key Provider ID Length). | bytes       |
    +-----------------+---------------------------------+-------------+
    | Key Provider    | 2                               | UInt16      |
    | Information     |                                 |             |
    | Length (Section |                                 |             |
    | 2.5.1.10.3)     |                                 |             |
    +-----------------+---------------------------------+-------------+
    | Key Provider    | Variable.  Equal to the value   | Bytes       |
    | Information     | specified in the previous 2     |             |
    | (Section        | bytes (Key Provider Information |             |
    | 2.5.1.10.4)     | Length).                        |             |
    +-----------------+---------------------------------+-------------+
    | Encrypted Data  | 2                               | UInt16      |
    | Key Length      |                                 |             |
    | (Section        |                                 |             |
    | 2.5.1.10.5)     |                                 |             |
    +-----------------+---------------------------------+-------------+
    | Encrypted Data  | Variable.  Equal to the value   | Bytes       |
    | Key (Section    | specified in the previous 2     |             |
    | 2.5.1.10.6)     | bytes (Encrypted Data Key       |             |
    |                 | Length).                        |             |
    +-----------------+---------------------------------+-------------+

                                  Table 10

2.5.1.10.1.  Key Provider ID Length

   The length of the key provider ID.

2.5.1.10.2.  Key Provider ID

   The key provider ID.  See the specification for encrypted data keys
   (../framework/structures.md#encrypted-data-key).

2.5.1.10.3.  Key Provider Information Length

   The length of the key provider information.

2.5.1.10.4.  Key Provider Information

   The key provider information.  See the specification for encrypted
   data keys (../framework/structures.md#encrypted-data-key).

2.5.1.10.5.  Encrypted Data Key Length

   The length of the encrypted data key.

2.5.1.10.6.  Encrypted Data Key

   The encrypted data key.  It is the data key encrypted by the key
   provider.

2.5.1.11.  Content Type

   The content type of the message body (message-body.md).  The value
   (hex) of this field MUST be a value that exists in the following
   table:

2.5.1.11.1.  Supported Content Types

      +=============+==============================================+
      | Value (hex) | Content Type                                 |
      +=============+==============================================+
      | 01          | Non-Framed (message-body.md#non-framed-data) |
      +-------------+----------------------------------------------+
      | 02          | Framed (message-body.md#framed-data)         |
      +-------------+----------------------------------------------+

                                 Table 11

2.5.2.  Algorithm Suite Data

   A variable length byte sequence interpreted according to the
   algorithm suite.  The length of the suite data field MUST be equal to
   the Algorithm Suite Data Length (../framework/algorithm-
   suites.md#algorithm-suite-data-length) value of the algorithm suite
   (../framework/algorithm-suites.md) specified by the Algorithm Suite
   ID (Section 2.5.1.5) field.

2.5.2.1.  Reserved

   A reserved sequence of 4 bytes that MUST have the value (hex) of "00
   00 00 00".

2.5.2.2.  IV Length

   The length of the initialization vector (IV).  This value MUST be
   equal to the IV length (../framework/algorithm-suites.md#iv-length)
   value of the algorithm suite (../framework/algorithm-suites.md)
   specified by the Algorithm Suite ID (Section 2.5.1.5) field.

2.5.2.3.  Frame Length

   The length of the encrypted content (message-body.md#encrypted-
   content) within each regular frame (message-body.md#regular-frame) of
   framed content.  When the content type (Section 2.5.1.11) is non-
   framed, the value of this field MUST be 0.

2.5.3.  Header Authentication

   The header authentication contains fields used for authentication of
   the header body (Section 2.5.1).

2.5.3.1.  Header Authentication Version 1.0

   The following table describes the fields that form the header
   authentication.  The bytes are appended in the order shown.

   +================+====================================+=============+
   | Field          | Length, in bytes                   | Interpreted |
   |                |                                    | as          |
   +================+====================================+=============+
   | Section        | Variable.  Determined by the       | Bytes       |
   | 2.5.3.3        | IV length value of the             |             |
   |                | algorithm suite (../framework/     |             |
   |                | algorithm-suites.md) specified     |             |
   |                | by the Algorithm Suite ID          |             |
   |                | (Section 2.5.1.5) field.           |             |
   +----------------+------------------------------------+-------------+
   | Authentication | Variable.  Determined by the       | Bytes       |
   | Tag (Section   | byte value of the                  |             |
   | 2.5.3.4)       | authentication tag of the          |             |
   |                | algorithm suite (../framework/     |             |
   |                | algorithm-suites.md) specified     |             |
   |                | by the Algorithm Suite ID          |             |
   |                | (Section 2.5.1.5) field.           |             |
   +----------------+------------------------------------+-------------+

                                  Table 12

2.5.3.2.  Header Authentication Version 2.0

   The following table describes the fields that form the header
   authentication.  The bytes are appended in the order shown.

   +================+====================================+=============+
   | Field          | Length, in bytes                   | Interpreted |
   |                |                                    | as          |
   +================+====================================+=============+
   | Authentication | Variable.  Determined by the       | Bytes       |
   | Tag (Section   | byte value of the                  |             |
   | 2.5.3.4)       | authentication tag of the          |             |
   |                | algorithm suite (../framework/     |             |
   |                | algorithm-suites.md) specified     |             |
   |                | by the Algorithm Suite ID          |             |
   |                | (Section 2.5.1.5) field.           |             |
   +----------------+------------------------------------+-------------+

                                  Table 13

2.5.3.3.  IV

   The initialization vector (IV) used as input to calculate the
   authentication tag (Section 2.5.3.4).

2.5.3.4.  Authentication Tag

   The authentication value for the header.  The algorithm suite
   (../framework/algorithm-suites.md) specified by the Algorithm Suite
   ID (Section 2.5.1.5) field determines how the value of this field is
   calculated (../client-apis/encrypt.md), and uses this value to
   authenticate the contents of the header during decryption (../client-
   apis/decrypt.md).

2.6.  Appendix

2.6.1.  Example Structure Definition

   Below is an example definition of the message header format described
   in this document, described in a "ASN.1-like" format.

   ``` DEFINITIONS ::= BEGIN

   Version OCTET STRING (0x01)

   Type OCTET STRING (0x80)

   AlgorithmId OCTET STRING ( 0x00 0x14, 0x00 0x46, 0x00 0x78, 0x01
   0x14, 0x01 0x46, 0x01 0x78, 0x02 0x14, 0x02 0x46, 0x02 0x78, )

   MessageId OCTET STRING (SIZE(16))

   KeyValuePair SEQUENCE (SIZE(4)) { KeyLength UINT16, Key UTF8String
   (SIZE(0..2^16-1)), ValueLength UINT16, Value UTF8String
   (SIZE(0..2^16-1)), }

   AAD SEQUENCE (SIZE(1..2)) { KeyValuePairsLength UINT16, KeyValuePairs
   SEQUENCE (SIZE(2)) { KeyValuePairCount UINT16, KeyValuePairEntries
   SEQUENCE (SIZE(1..2^16-1)) of KeyValuePair } }

   EncryptedDataKey SEQUENCE (SIZE(6)) { ProviderIdLength UINT16,
   ProviderId UTF8String (SIZE(0..2^16-1)), KeyInfoLength UINT16,
   KeyInfo OCTET STRING (SIZE(0..2^16-1)), EncryptedDataKeyLength
   UINT16, EncryptedDataKey OCTET STRING (SIZE(0..2^16-1)), }

   EncryptedDataKeys SEQUENCE (SIZE(2)) { EncryptedDataKeyCount UINT16,
   EncryptedDataKeyEntries SEQUENCE (SIZE(1..2^16-1)) of
   EncryptedDataKey }

   ContentType OCTET STRING (0x01, 0x02)

   Reserved OCTET STRING (0x00 0x00 0x00 0x00)

   IvLength UINT8

   FrameLength UINT32

   HeaderBody SEQUENCE (SIZE(10)) { Version Version, Type Type,
   AlgorithmId AlgorithmId, MessageId MessageId, AAD AAD,
   EncryptedDataKeys EncryptedDataKeys, ContentType ContentType,
   Reserved Reserved, IvLength IvLength, FrameLength FrameLength, }

   HeaderAuth SEQUENCE (SIZE(2)) { Iv OCTET STRING, AuthTag OCTET
   STRING, }

   Header SEQUENCE (SIZE(2)) { HeaderBody HeaderBody, HeaderAuth
   HeaderAuth, } ```

2.6.2.  Example Bytes

   The example below shows the raw bytes of an example header, in
   hexadecimal notation, followed by a description of what those bytes
   represent.

   "01 Version (1.0) 80 Type (128, customer authenticated encrypted
   data) 0378 Algorithm Suite ID (see Algorithm Suites Reference)
   B8929B01 753D4A45 C0217F39 404F70FF Message ID (random 128-bit value)
   008E AAD Length (142) 0004 AAD Key-Value Pair Count (4) 0005 AAD Key-
   Value Pair 1, Key Length (5) 30746869 73 AAD Key-Value Pair 1, Key
   ("0This") 0002 AAD Key-Value Pair 1, Value Length (2) 6973 AAD Key-
   Value Pair 1, Value ("is") 0003 AAD Key-Value Pair 2, Key Length (3)
   31616E AAD Key-Value Pair 2, Key ("1an") 000A AAD Key-Value Pair 2,
   Value Length (10) 656E6372 79774690 6F6E AAD Key-Value Pair 2, Value
   ("encryption") 0008 AAD Key-Value Pair 3, Key Length (8) 32636F6E
   74657874 AAD Key-Value Pair 3, Key ("2context") 0007 AAD Key-Value
   Pair 3, Value Length (7) 6578616D 706C65 AAD Key-Value Pair 3, Value
   ("example") 0015 AAD Key-Value Pair 4, Key Length (21) 6177732D
   63727970 746F2D70 75626C69 AAD Key-Value Pair 4, Key ("aws-crypto-
   public-key") 632D6B65 79 0044 AAD Key-Value Pair 4, Value Length (68)
   41734738 67473949 6E4C5075 3136594B AAD Key-Value Pair 4, Value ("AsG
   8gG9InLPu16YKlqXTOD+nykG8YqHAhqecj8aXfD2e5B4gtVE73dZkyClA+rAMOQ==")
   6C715854 4F442B6E 796B4738 59714841 68716563 6A386158 66443265
   35423467 74564537 33645A6B 79436C41 2B72414D 4F513D3D 0002 Encrypted
   Data Key Count (2) 0007 Encrypted Data Key 1, Key Provider ID Length
   (7) 6177732D 6B6D73 Encrypted Data Key 1, Key Provider ID ("aws-kms")
   004B Encrypted Data Key 1, Key Provider Information Length (75)
   61726E3A 6177733A 6B6D733A 75732D77 Encrypted Data Key 1, Key
   Provider Information ("arn:aws:kms:us-west-
   2:111122223333:key/715c0818-5825-4245-a755-138a6d9a11e6") 6573742D
   323A3131 31313232 32323333 33333A6B 65792F37 31356330 3831382D
   35383235 2D343234 352D6137 35352D31 33386136 64396131 316536 00A7
   Encrypted Data Key 1, Encrypted Data Key Length (167) 01010200
   7857A1C1 F7370545 4ECA7C83 Encrypted Data Key 1, Encrypted Data Key
   956C4702 23DCE8D7 16C59679 973E3CED 02A4EF29 7F000000 7E307C06
   092A8648 86F70D01 0706A06F 306D0201 00306806 092A8648 86F70D01
   0701301E 06096086 48016503 04012E30 11040C28 4116449A 0F2A0383
   659EF802 0110803B B23A8133 3A33605C 48840656 C38BCB1F 9CCE7369
   E9A33EBE 33F46461 0591FECA 947262F3 418E1151 21311A75 E575ECC5
   61A286E0 3E2DEBD5 CB005D 0007 Encrypted Data Key 2, Key Provider ID
   Length (7) 6177732D 6B6D73 Encrypted Data Key 2, Key Provider ID
   ("aws-kms") 004E Encrypted Data Key 2, Key Provider Information
   Length (78) 61726E3A 6177733A 6B6D733A 63612D63 Encrypted Data Key 2,
   Key Provider Information ("arn:aws:kms:ca-central-
   1:111122223333:key/9b13ca4b-afcc-46a8-aa47-be3435b423ff") 656E7472
   616C2D31 3A313131 31323232 32333333 333A6B65 792F3962 31336361
   34622D61 6663632D 34366138 2D616134 372D6265 33343335 62343233 6666
   00A7 Encrypted Data Key 2, Encrypted Data Key Length (167) 01010200
   78FAFFFB D6DE06AF AC72F79B Encrypted Data Key 2, Encrypted Data Key
   0E57BD87 3F60F4E6 FD196144 5A002C94 AF787150 69000000 7E307C06
   092A8648 86F70D01 0706A06F 306D0201 00306806 092A8648 86F70D01
   0701301E 06096086 48016503 04012E30 11040CB2 A820D0CC 76616EF2
   A6B30D02 0110803B 8073D0F1 FDD01BD9 B0979082 099FDBFC F7B13548
   3CC686D7 F3CF7C7A CCC52639 122A1495 71F18A46 80E2C43F A34C0E58
   11D05114 2A363C2A E11397 01 Content Type (1, non-framed data)
   00000000 Reserved 0C IV Length (12) 00000000 Frame Length (0, non-
   framed data) 734C1BBE 032F7025 84CDA9D0 IV 2C82BB23 4CBF4AAB 8F5C6002
   622E886C Authentication Tag"

3.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

Acknowledgments

Author's Address

   Amazon AWS
   Amazon AWS

   Email: cryptools+rfc@amazon.com
